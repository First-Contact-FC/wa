name: Build multi-arch image

on:
  workflow_call:
    inputs:
      ghcr-dev-build-image-name:
        required: true
        type: string
      ghcr-image-name:
        required: true
        type: string
      dockerio-image-name:
        required: true
        type: string
      # If true, the build will contain the arm64 image AND we will push to GHCR and DockerHub
      final_build:
        required: false
        type: boolean
        default: false
      push-to-dockerio:
        required: false
        type: boolean
        default: false
      dockerfile:
        required: true
        type: string
      sentry_project:
        required: false
        type: string
        default: ""


jobs:
  build-image:
    runs-on: ${{ matrix.os }}
    #if: ${{ inputs.final_build == true || matrix.shortPlatform != 'arm64' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            shortPlatform: amd64
            os: ubuntu-24.04
          - platform: linux/arm64
            shortPlatform: arm64
            os: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Get at least the previous revision to be able to fetch the HEAD^1 SHA.
          fetch-depth: 2

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: rlespinasse/github-slug-action@4.2.3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.ghcr-dev-build-image-name }}

      - name: Get previous commit SHA
        id: prev-commit
        run: echo "PREV_SHA=$(git rev-parse HEAD^1)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          #platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ inputs.ghcr-dev-build-image-name }}:${{ matrix.shortPlatform }}-${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ inputs.ghcr-dev-build-image-name }}:${{ matrix.shortPlatform }}-${{ env.PREV_SHA }}
            type=registry,ref=${{ inputs.ghcr-dev-build-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
            type=registry,ref=${{ inputs.ghcr-image-name }}:develop
          cache-to: type=inline
          labels: ${{ steps.meta.outputs.labels }}
          secrets:
            "SENTRY_PROJECT=${{ inputs.sentry_project }}"
            "SENTRY_URL=${{ secrets.SENTRY_URL }}"
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
            "SENTRY_ORG=${{ secrets.SENTRY_ORG }}"
            "SENTRY_ENVIRONMENT=${{ github.event_name == 'release' && 'production' || env.GITHUB_REF_NAME == 'master' && 'staging' || 'testing' }}"
            "SENTRY_RELEASE=${{ github.event_name == 'release' && env.GITHUB_REF_NAME || format('{0}@{1}', env.GITHUB_REF_NAME_SLUG, env.GITHUB_SHA) }}"


  merge-image:
    runs-on: ubuntu-latest
    needs:
      - build-image
    if: ${{ inputs.final_build == true }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' || github.event_name == 'release' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: rlespinasse/github-slug-action@4.2.3

      - name: Create and push manifest
        run: |
          docker manifest create ${{ inputs.ghcr-dev-build-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }} \
            ${{ inputs.ghcr-dev-build-image-name }}:amd64-${{ github.sha }} \
            ${{ inputs.ghcr-dev-build-image-name }}:arm64-${{ github.sha }}
          docker manifest push ${{ inputs.ghcr-dev-build-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}

      - name: Install regctl
        uses: regclient/actions/regctl-installer@main
        with:
          release: 'v0.8.1'

      # Copy the image to GHCR
      - name: Copy image to GHCR
        run: |
          regctl image copy ${{ inputs.ghcr-dev-build-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }} ${{ inputs.ghcr-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}

      # Copy the image to DockerHub
      - name: Copy image to DockerHub
        if: ${{ inputs.push-to-dockerio == true }}
        run: |
          regctl image copy ${{ inputs.ghcr-dev-build-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }} ${{ inputs.dockerio-image-name }}:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
